{"version":3,"sources":["index.tsx"],"names":["TreevizReact","_React$Component","_getPrototypeOf2","_this","Object","_Users_pierrecaporossi_Documents_treeviz_treeviz_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_len","arguments","length","args","Array","_key","_Users_pierrecaporossi_Documents_treeviz_treeviz_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_pierrecaporossi_Documents_treeviz_treeviz_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","apply","concat","state","id","Math","floor","random","_Users_pierrecaporossi_Documents_treeviz_treeviz_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_Users_pierrecaporossi_Documents_treeviz_treeviz_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","_Users_pierrecaporossi_Documents_treeviz_treeviz_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectDestructuringEmpty__WEBPACK_IMPORTED_MODULE_1__","props","treeviz","Treeviz","_Users_pierrecaporossi_Documents_treeviz_treeviz_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","htmlId","refresh","data","react__WEBPACK_IMPORTED_MODULE_7__","style","width","areaWidth","height","areaHeight","React","defaultProps","nodeWidth","nodeHeight","mainAxisNodeSpacing","renderNode","onNodeClick","onNodeMouseEnter","onNodeMouseLeave","duration","isHorizontal","hasFlatData","secondaryAxisNodeSpacing","hasPanAndZoom","relationnalField","linkWidth","linkShape","linkColor","idKey"],"mappings":"8MAwCaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAsBEQ,MAAQ,CACNC,GAAI,OAASC,KAAKC,MAAsB,IAAhBD,KAAKE,WAvBjCnB,EAAA,OAAAC,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAAC,GAAAG,OAAAoB,EAAA,EAAApB,CAAAJ,EAAA,EAAAyB,IAAA,oBAAAC,MAAA,WAyBuBtB,OAAAuB,EAAA,EAAAvB,CACRE,KAAKsB,OAEhBtB,KAAKuB,QAAUC,SAAA1B,OAAA2B,EAAA,EAAA3B,CAAA,CAEb4B,OAAQ1B,KAAKY,MAAMC,IAChBb,KAAKsB,QAGVtB,KAAKuB,QAAQI,QAAQ3B,KAAKsB,MAAMM,QAlCpC,CAAAT,IAAA,qBAAAC,MAAA,WAuCIpB,KAAKuB,QAAQI,QAAQ3B,KAAKsB,MAAMM,KAAM5B,KAAKsB,SAvC/C,CAAAH,IAAA,SAAAC,MAAA,WA0CI,OACES,EAAA,qBACEhB,GAAIb,KAAKY,MAAMC,GACfiB,MAAO,CAAEC,MAAO/B,KAAKsB,MAAMU,UAAWC,OAAQjC,KAAKsB,MAAMY,kBA7CjExC,EAAA,CAAkCyC,aAArBzC,EACJ0C,aAAe,CACpBC,UAAW,GACXC,WAAY,IACZC,oBAAqB,IACrBC,WAAY,iBAAM,IAClBC,YAAa,aACbC,iBAAkB,aAClBC,iBAAkB,aAClBC,SAAU,IACVC,cAAc,EACdC,aAAa,EACbC,yBAA0B,KAC1BC,eAAe,EACfC,iBAAkB,SAClBC,UAAW,kBAAM,GACjBC,UAAW,aACXC,UAAW,iBAAM,WACjBC,MAAO,KACPnB,WAAY,IACZF,UAAW","file":"static/js/main.c01ce7dc.chunk.js","sourcesContent":["import * as React from \"react\";\nimport * as Treeviz from \"treeviz\";\nimport { ExtendedHierarchyPointNode } from \"treeviz/dist/typescript/typings\";\n\ntype NodeType = ExtendedHierarchyPointNode & {\n  x0: number;\n  y0: number;\n  settings: { nodeWidth: number; nodeHeight: number; duration: number };\n};\n\ninterface ITreeConfig {\n  data: any[];\n  idKey: string;\n  relationnalField: string;\n  hasFlatData: boolean;\n  nodeWidth: number;\n  nodeHeight: number;\n  mainAxisNodeSpacing: number | \"auto\";\n  secondaryAxisNodeSpacing: number;\n  renderNode: (node: NodeType) => string | null;\n  nodeColor: (node: NodeType) => string;\n  linkShape: \"orthogonal\" | \"quadraticBeziers\" | \"curve\" | \"\";\n  linkColor: (node: NodeType) => string;\n  linkWidth: (node: NodeType) => number;\n  onNodeClick: (node: NodeType) => void;\n  onNodeMouseEnter: (node: NodeType) => void;\n  onNodeMouseLeave: (node: NodeType) => void;\n  isHorizontal: boolean;\n  hasPanAndZoom: boolean;\n  hasPan?: boolean;\n  hasZoom?: boolean;\n  duration: number;\n  marginTop: number;\n  marginBottom: number;\n  marginLeft: number;\n  marginRight: number;\n  areaHeight: number;\n  areaWidth: number;\n}\n\nexport class TreevizReact extends React.Component<Partial<ITreeConfig>> {\n  static defaultProps = {\n    nodeWidth: 80,\n    nodeHeight: 120,\n    mainAxisNodeSpacing: 1.3,\n    renderNode: () => \"\",\n    onNodeClick: () => undefined,\n    onNodeMouseEnter: () => undefined,\n    onNodeMouseLeave: () => undefined,\n    duration: 700,\n    isHorizontal: true,\n    hasFlatData: true,\n    secondaryAxisNodeSpacing: 1.25,\n    hasPanAndZoom: true,\n    relationnalField: \"father\",\n    linkWidth: () => 3,\n    linkShape: \"orthogonal\",\n    linkColor: () => \"#dddddd\",\n    idKey: \"id\",\n    areaHeight: 500,\n    areaWidth: 800\n  };\n  state = {\n    id: \"tree\" + Math.floor(Math.random() * 1000000)\n  };\n  componentDidMount() {\n    const {} = this.props;\n    // @ts-ignore\n    this.treeviz = Treeviz.create({\n      // @ts-ignore\n      htmlId: this.state.id,\n      ...this.props\n    });\n    // @ts-ignore\n    this.treeviz.refresh(this.props.data);\n  }\n  componentDidUpdate() {\n    // @ts-ignore\n\n    this.treeviz.refresh(this.props.data, this.props);\n  }\n  render() {\n    return (\n      <div\n        id={this.state.id}\n        style={{ width: this.props.areaWidth, height: this.props.areaHeight }}\n      />\n    );\n  }\n}\n"],"sourceRoot":""}